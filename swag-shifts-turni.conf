# SWAG / Nginx reverse proxy for shifts-turni (Flask app)
# Place (or symlink) this file into: /config/nginx/proxy-confs/shifts-turni.subdomain.conf
# DNS: create a CNAME (or A) for shifts-turni.<yourdomain>
# After first start SWAG will request certs if server_name matches your DNS.

############################
# HTTPS Reverse Proxy Block
############################
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    
    # Use wildcard subdomain form like example uses (radarr.*). Adjust as needed.
    # Option A (wildcard style like example):
    server_name shifts-turni.*;
    # Option B (explicit FQDN, uncomment and set):
    # server_name shifts-turni.example.com;

    include /config/nginx/ssl.conf;

    # Max upload size (increase if uploading large DOCX batches)
    client_max_body_size 100M;

    # Optional auth / SSO integrations (uncomment as needed)
    #include /config/nginx/ldap-server.conf;        # LDAP (server block)
    #include /config/nginx/authelia-server.conf;    # Authelia (server block)
    #include /config/nginx/authentik-server.conf;   # Authentik (server block)

    # --- Primary App Location ---
    location / {
        # Optional HTTP Basic Auth
        #auth_basic "Restricted";
        #auth_basic_user_file /config/nginx/.htpasswd;

        # Optional per-location includes matching chosen SSO method
        #include /config/nginx/ldap-location.conf;        # LDAP
        #include /config/nginx/authelia-location.conf;    # Authelia
        #include /config/nginx/authentik-location.conf;   # Authentik

        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        # Upstream definition (container name resolves via docker network swag_net)
        set $upstream_app shifts-turni-web;
        set $upstream_port 5000;
        set $upstream_proto http;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    # (Optional) API path example (mirror of main). Uncomment if you want a distinct block.
    #location ~ ^/api/ {
    #    include /config/nginx/proxy.conf;
    #    include /config/nginx/resolver.conf;
    #    set $upstream_app shifts-turni-web;
    #    set $upstream_port 5000;
    #    set $upstream_proto http;
    #    proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    #}

    # (Optional) Static caching for typical static assets served by Flask
    location ~* \.(?:css|js|jpg|jpeg|gif|png|svg|ico|webp|woff2?)$ {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        set $upstream_app shifts-turni-web;
        set $upstream_port 5000;
        set $upstream_proto http;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
        expires 7d;
        access_log off;
    }
}

############################
# HTTP -> HTTPS Redirect
############################
server {
    listen 80;
    listen [::]:80;
    server_name shifts-turni.*;
    return 301 https://$host$request_uri;
}
